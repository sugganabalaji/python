			=========================================================
							1. array()
			=========================================================
=>This Function is used for converting Traditional Python Objects into ndarray object.
=>Syntax:-              varname=numpy.array( Object,dtype )
		=>Here var name is an object of <class,ndarray>
		=>here array() is pre-defined function of numpy module used for converting Traditional Python Objects into ndrray object.
		=>object represents any Traditional Python Objects
		=>dtype represents any numpy data type such as int8,int16,int32,float16, float 32, float64,....etc (Internal data types of C lang)

Examples:
------------------
>>> import numpy as np
>>> l1=[10,20,30,40,50,60]
>>> print(l1,type(l1))-----------------[10, 20, 30, 40, 50, 60] <class 'list'>
>>> a=np.array(l1)
>>> print(a,type(a))----------------[10 20 30 40 50 60] <class 'numpy.ndarray'>
>>> t=(10,20,30,40,50,60,70)
>>> print(t,type(t))--------------(10, 20, 30, 40, 50, 60, 70) <class 'tuple'>
>>> a=np.array(t)
>>> print(a,type(a))--------------[10 20 30 40 50 60 70] <class 'numpy.ndarray'>
>>> d1={10:1.2,20:4.5,30:6.7}
>>> a=np.array(d1)
>>> a----array({10: 1.2, 20: 4.5, 30: 6.7}, dtype=object)
---------------------------------------------------------------------------------------
>>> t=(10,20,30,40,50,60)
>>> a=np.array(t)
>>> a--------------array([10, 20, 30, 40, 50, 60])
>>> a.ndim------------1
>>> a.dtype----------dtype('int32')
>>> a.shape-------------(6,)
>>> b=a.reshape(3,2)
>>> c=a.reshape(2,3)
>>> b--------------
		array([[10, 20],
		       [30, 40],
		       [50, 60]])
>>> c
	array([[10, 20, 30],
	       [40, 50, 60]])
>>> print(b,type(b))
		[[10 20]
		 [30 40]
		 [50 60]] <class 'numpy.ndarray'>
>>> print(c,type(c))
			[[10 20 30]
			 [40 50 60]] <class 'numpy.ndarray'>
>>> b.ndim-------------2
>>> c.ndim------------2
>>> b.shape---------------(3, 2)
>>> c.shape-------------(2, 3)
>>> d=a.reshape(3,3)-------ValueError: cannot reshape array of size 6 into shape (3,3)
----------------------------------------------------------------------------------------------------------------------------
>>> t1=((10,20),(30,40))
>>> print(t1,type(t1))--------------((10, 20), (30, 40)) <class 'tuple'>
>>> a=np.array(t1)
>>> a
		array([[10, 20],
		       [30, 40]])
>>> a.ndim----------2
>>> a.shape----------(2, 2)
------------------------------------------------------------------------------------------------------------
>>> t1=( ((10,20,15),(30,40,25)),( (50,60,18),(70,80,35) ))
>>> print(t1,type(t1))
(((10, 20, 15), (30, 40, 25)), ((50, 60, 18), (70, 80, 35))) <class 'tuple'>
>>> a=np.array(t1)
>>> a
array([[[10, 20, 15],
        [30, 40, 25]],

       [[50, 60, 18],
        [70, 80, 35]]])
>>> print(a)
[[[10 20 15]
  [30 40 25]]

 [[50 60 18]
  [70 80 35]]]
>>> a.ndim
3
>>> a.shape
(2, 2, 3)
>>> b=a.reshape(4,3)
>>> b
array([[10, 20, 15],
       [30, 40, 25],
       [50, 60, 18],
       [70, 80, 35]])
>>> c=a.reshape(3,4)
>>> c
array([[10, 20, 15, 30],
       [40, 25, 50, 60],
       [18, 70, 80, 35]])
>>> d=a.reshape(3,2,2)
>>> d
array([[[10, 20],
        [15, 30]],

       [[40, 25],
        [50, 60]],

       [[18, 70],
        [80, 35]]])
>>> d[0]
array([[10, 20],
       [15, 30]])
>>> d[1]
array([[40, 25],
       [50, 60]])
>>> d[2]
array([[18, 70],
       [80, 35]])

-----------------------------------------------------------------------------------------------------------------------------------------------------