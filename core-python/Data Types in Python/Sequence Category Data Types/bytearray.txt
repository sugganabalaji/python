=============================================================
                                                4. bytearray
                        =============================================================
=>'bytearray' is one of the pre-defined class and treated as Sequence Data Type.
=>The purpose of bytearray data type is that "To Implement End-to-End Encryption for obtaining the Security to the                Data in Digital World"
=>To Implement End-to-End Encryption by using bytearray data type by organizing OR Using the Range of Values from 
    0 to 256 i.e It store the range of values 0 to 256-1(0,255).
=> In Python Programming, we don't have any Symbolic Notation  for Storing bytearray data bcoz Python Programmer 
    never Stores bytearray data in the program (But It is Just Convertion format) Directly. But we convert Other type of Values into bytearray type by using bytearray().
=>Syntax:      varname=bytearray(list / set / tuple / dict ) 
=>An Object of bytearray maintains INSERTION ORDER (Nothing but whatever the Order we insert the data, In the Same 
   Order the data will be displayed )
=>On the Object of bytearray, we can perform Both Indexing and  Slicing Operations.
=>An Object of bytearray belongs to MUTABLE bcoz 'bytearray' object  supports item assignment
---------------------------------------------------------------------------------------------------------------------------------------------------------
NOTE: The Functionality of bytearray is exactly similar to bytes. But an Object of bytes belongs to IMMUTABLE where 
            as an object of bytearray belongs to MUTABLE.
---------------------------------------------------------------------------------------------------------------------------------------------------------        
Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------        
>>> lst=[10,20,35,0,65,256,100]
>>> print(lst,type(lst))------------------[10, 20, 35, 0, 65, 256, 100] <class 'list'>
>>> ba=bytearray(lst)-------------------ValueError: byte must be in range(0, 256)
>>> lst=[10,20,-35,0,65,255,100]
>>> print(lst,type(lst))-------------------[10, 20, -35, 0, 65, 255, 100] <class 'list'>
>>> ba=bytearray(lst)------------------ValueError: byte must be in range(0, 256)
------------------------------
>>> lst=[10,20,35,0,65,255,100]
>>> print(lst,type(lst))-------------[10, 20, 35, 0, 65, 255, 100] <class 'list'>
>>> ba=bytearray(lst)
>>> print(ba,type(ba))--------------bytearray(b'\n\x14#\x00A\xffd') <class 'bytearray'>
>>> for val in ba:
...                print(val)
...
                        10
                        20
                        35
                        0
                        65
                        255
                        100
>>> for val in ba[2:5]:
...                print(val)
...
                        35
                        0
                        65
>>>
>>> ba[0]----------------------------10
>>> ba[-1]---------------------------100
>>> for val in ba[::-1]:
...                print(val)
...
                        100
                        255
                        65
                        0
                        35
                        20
                        10
------------------------------------------------
>>> lst=[10,20,35,0,65,255,100]
>>> print(lst,type(lst))---------------[10, 20, 35, 0, 65, 255, 100] <class 'list'>
>>> ba=bytearray(lst)
>>> print(ba,type(ba),id(ba))------bytearray(b'\n\x14#\x00A\xffd') <class 'bytearray'> 1336139171184
>>> ba[0]----------------------------10
>>> ba[0]=125 # Item Assigment is Possible in the case of bytearray
>>> for val in ba:
...                print(val)
...
                        125
                        20
                        35
                        0
                        65
                        255
                        100
>>> print(ba,type(ba),id(ba))-----bytearray(b'}\x14#\x00A\xffd') <class 'bytearray'> 1336139171184
------------------
>>> ba[1:3]=[150,155]  # Item Assigment is Possible in the case of bytearray
>>> for val in ba:
...                print(val)
...
                125
                150
                155
                0
                65
                255
                100
>>> print(ba,type(ba),id(ba))------bytearray(b'}\x96\x9b\x00A\xffd') <class 'bytearray'> 1336139171184
====================================x======================================================