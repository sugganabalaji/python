===================================================
                                                                4. complex()
                                ===================================================
=>The complex() is used for Converting One Possible Type of Value into complex type value.
=>Syntax:        varname=complex(int / float / bool /  str)
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-1:   int type into complex type--Possible
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=12
>>> print(a,type(a))------------------12 <class 'int'>
>>> b=complex(a)
>>> print(b,type(b))-----------------(12+0j) <class 'complex'>
>>> a=0
>>> complex(a)---------------------0j
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-2:  float type into complex type--Possible
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=1.2
>>> print(a,type(a))-----------------1.2 <class 'float'>
>>> b=complex(a)
>>> print(b,type(b))----------------(1.2+0j) <class 'complex'>
>>> complex(1.5)-------------------(1.5+0j)
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-3: bool type into complex type: POSSIBLE
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=True
>>> print(a,type(a))-------------------True <class 'bool'>
>>> b=complex(a)
>>> print(b,type(b))-----------------(1+0j) <class 'complex'>
>>> a=False
>>> print(a,type(a))----------------False <class 'bool'>
>>> b=complex(a)
>>> print(b,type(b))----------------0j <class 'complex'>
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-4:  str type into complex type
----------------------------------------------------------------------------------------------------------------------------------------------------------
Case-1 :  str int  into  complex type--POSSIBLE
****************************************************************
>>> a="2"
>>> print(a,type(a))-------------2 <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))----------(2+0j) <class 'complex'>
>>> complex("2+3j+5")--------------ValueError: complex() arg is a malformed string
>>> complex("2.3")--------------------(2.3+0j)
>>> complex("4")+complex("5.2")-------------(9.2+0j)
>>> bool(complex("4")+complex("5.2"))----------True
>>> complex("0b1010")--------------------------ValueError: complex() arg is a malformed string
>>> complex(0b1010)---------------------------(10+0j)
>>> complex(len("0b1010"))--------------------(6+0j)
****************************************************************
Case-2: str  float into complex type
****************************************************************
>>> a="1.2"
>>> print(a,type(a))-------------1.2 <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))--------------(1.2+0j) <class 'complex'>
>>> complex("4")+complex("5.2")-------------(9.2+0j)
****************************************************************
Case-3: str  bool  into complex type--NOT POSSIBLE
****************************************************************
>>> a="True"
>>> print(a,type(a))-------------------------True <class 'str'>
>>> b=complex(a)---------------------------ValueError: complex() arg is a malformed string
>>> complex("False")---------------------ValueError: complex() arg is a malformed string
****************************************************************
Case-4:    str complex into complex type--POSSIBLE
****************************************************************
>>> a="2+3.5j"
>>> print(a,type(a))------------------2+3.5j <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))----------------(2+3.5j) <class 'complex'>
>>> a="2+3J"
>>> print(a,type(a))-------------------2+3J <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))------------------(2+3j) <class 'complex'>
>>> complex("2j")*complex("6j")-------------(-12+0j)
>>> complex("2j")+complex("6j")-------------8j
****************************************************************
Case-5:    Pure Str into complex type
****************************************************************
>>> a="PYTHON"
>>> print(a,type(a))-----------------------PYTHON <class 'str'>
>>> b=complex(a)---------------------ValueError: complex() arg is a malformed string
---------------------------
>>> complex(len("PYTHON"))-----------(6+0j)
>>> complex(len("PYTHON")-len("PYTHON"))--------0j
>>> complex(-len("PYTHON")-len("PYTHON"))-------(-12+0j)
****************************************************************