===========================================================================
                                Combination of dict with dict,set,tuple and list
                ===========================================================================


====================================================================================================
Case1:  dict in dict --Nested Dict Possible to Define
====================================================================================================
Examples
------------------
>>> d1={"sno":10,"sname":"RS","IntMarks":{"cm":17,"cpp":16,"os":19},"ExtMarks":{"cm":78,"cpp":77,"os":79},"cname":"CUCET"}
>>> print(d1,type(d1))
{'sno': 10, 'sname': 'RS', 'IntMarks': {'cm': 17, 'cpp': 16, 'os': 19}, 'ExtMarks': {'cm': 78, 'cpp': 77, 'os': 79}, 'cname': 'CUCET'} <class 'dict'>
>>> for its in d1.items():
...                print(its)
...
                ('sno', 10)
                ('sname', 'RS')
                ('IntMarks', {'cm': 17, 'cpp': 16, 'os': 19})
                ('ExtMarks', {'cm': 78, 'cpp': 77, 'os': 79})
                ('cname', 'CUCET')
>>> for k,v in d1.items():
...                print(k,"--->",v)
...
                        sno ---> 10
                        sname ---> RS
                        IntMarks ---> {'cm': 17, 'cpp': 16, 'os': 19}
                        ExtMarks ---> {'cm': 78, 'cpp': 77, 'os': 79}
                        cname ---> CUCET
>>> for k,v in d1.items():
...                print(k,"--->",v,"-->",type(v),type(d1))
...
                sno ---> 10 --> <class 'int'> <class 'dict'>
                sname ---> RS --> <class 'str'> <class 'dict'>
                IntMarks ---> {'cm': 17, 'cpp': 16, 'os': 19} --> <class 'dict'> <class 'dict'>
                ExtMarks ---> {'cm': 78, 'cpp': 77, 'os': 79} --> <class 'dict'> <class 'dict'>
                cname ---> CUCET --> <class 'str'> <class 'dict'>
>>> d1["IntMarks"]------------------{'cm': 17, 'cpp': 16, 'os': 19}
>>> d1["IntMarks"]["DBMS"]=16
>>> d1["ExtMarks"]["DBMS"]=74
>>> print(d1,type(d1))
                {'sno': 10, 'sname': 'RS', 'IntMarks': {'cm': 17, 'cpp': 16, 'os': 19, 'DBMS': 16}, 'ExtMarks': {'cm': 78, 'cpp': 77, 'os': 79, 'DBMS': 74}, 'cname': 'CUCET'} <class 'dict'>
>>> d1["IntMarks"].pop("cm")-------17
>>> d1["ExtMarks"].pop("os")------79
>>> print(d1,type(d1))
                {'sno': 10, 'sname': 'RS', 'IntMarks': {'cpp': 16, 'os': 19, 'DBMS': 16}, 'ExtMarks': {'cm': 78, 'cpp': 77, 'DBMS': 74}, 'cname': 'CUCET'} <class 'dict'>
-------------------
>>> d1={"sno":100,"name":"RS","IntMarks":{"cm":17,"c++":16},"ExtMarks":{"cm":70,"c++":67},"cname":"OU"}
>>> print(d1,type(d1))
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 17, 'c++': 16}, 'ExtMarks': {'cm': 70, 'c++': 67}, 'cname': 'OU'} <class 'dict'>
>>> for k in d1.keys():
...     print(k)
...
sno
name
IntMarks
ExtMarks
cname
>>> for v in d1.values():
...     print(v)
...
100
RS
{'cm': 17, 'c++': 16}
{'cm': 70, 'c++': 67}
OU
>>> for it in d1.items():
...     print(it)
...
('sno', 100)
('name', 'RS')
('IntMarks', {'cm': 17, 'c++': 16})
('ExtMarks', {'cm': 70, 'c++': 67})
('cname', 'OU')
>>> for gudu,sahu in d1.items():
...     print(gudu,"--->",sahu)
...
sno ---> 100
name ---> RS
IntMarks ---> {'cm': 17, 'c++': 16}
ExtMarks ---> {'cm': 70, 'c++': 67}
cname ---> OU
>>> for gudu,sahu in d1.items():
...     print(gudu,"--->",sahu,"--->",type(sahu),"--->",type(d1))
...
sno ---> 100 ---> <class 'int'> ---> <class 'dict'>
name ---> RS ---> <class 'str'> ---> <class 'dict'>
IntMarks ---> {'cm': 17, 'c++': 16} ---> <class 'dict'> ---> <class 'dict'>
ExtMarks ---> {'cm': 70, 'c++': 67} ---> <class 'dict'> ---> <class 'dict'>
cname ---> OU ---> <class 'str'> ---> <class 'dict'>
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 17, 'c++': 16}, 'ExtMarks': {'cm': 70, 'c++': 67}, 'cname': 'OU'}
>>> d1.get("IntMarks")
{'cm': 17, 'c++': 16}
>>> d1.get("ExtMarks")
{'cm': 70, 'c++': 67}
>>> for it in d1.get("IntMarks").items():
...     print(it)
...
('cm', 17)
('c++', 16)
>>> for k,v in d1.get("IntMarks").items():
...     print(k,"--->",v)
...
cm ---> 17
c++ ---> 16
>>> for k,v in d1.get("ExtMarks").items():
...     print(k,"--->",v)
...
cm ---> 70
c++ ---> 67
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 17, 'c++': 16}, 'ExtMarks': {'cm': 70, 'c++': 67}, 'cname': 'OU'}
>>> for k,v in d1["IntMarks"].items():
...     print(k,"--->",v)
...
cm ---> 17
c++ ---> 16
>>> for k,v in d1["ExtMarks"].items():
...     print(k,"--->",v)
...
cm ---> 70
c++ ---> 67
>>>
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 17, 'c++': 16}, 'ExtMarks': {'cm': 70, 'c++': 67}, 'cname': 'OU'}
>>> d1["IntMarks"]["cm"]
17
>>> d1["IntMarks"]["cm"]=18
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 18, 'c++': 16}, 'ExtMarks': {'cm': 70, 'c++': 67}, 'cname': 'OU'}
>>> d1["ExtMarks"]["cm"]=77
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 18, 'c++': 16}, 'ExtMarks': {'cm': 77, 'c++': 67}, 'cname': 'OU'}
>>> d1["ExtMarks"]["cm"]=d1["ExtMarks"].get("cm")+2
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 18, 'c++': 16}, 'ExtMarks': {'cm': 79, 'c++': 67}, 'cname': 'OU'}
>>> d1["ExtMarks"]["c++"]=d1["ExtMarks"]["c++"]+2
>>>
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 18, 'c++': 16}, 'ExtMarks': {'cm': 79, 'c++': 69}, 'cname': 'OU'}
>>> d1["IntMarks"].pop("c++")
16
>>> print(d1)
{'sno': 100, 'name': 'RS', 'IntMarks': {'cm': 18}, 'ExtMarks': {'cm': 79, 'c++': 69}, 'cname': 'OU'}
>>> d1.pop("IntMarks")
{'cm': 18}
>>> print(d1)
{'sno': 100, 'name': 'RS', 'ExtMarks': {'cm': 79, 'c++': 69}, 'cname': 'OU'}
>>> d1["IntMarks"]={"Java":15,"Python":16}
>>> print(d1)
{'sno': 100, 'name': 'RS', 'ExtMarks': {'cm': 79, 'c++': 69}, 'cname': 'OU', 'IntMarks': {'Java': 15, 'Python': 16}}
>>> d1["ExtMarks"]["os"]=80
>>> print(d1)
{'sno': 100, 'name': 'RS', 'ExtMarks': {'cm': 79, 'c++': 69, 'os': 80}, 'cname': 'OU', 'IntMarks': {'Java': 15, 'Python': 16}}
>>> d1["ExtMarks"]["Bonus"]={"CB":1,"CPPB":2}
>>> print(d1)
{'sno': 100, 'name': 'RS', 'ExtMarks': {'cm': 79, 'c++': 69, 'os': 80, 'Bonus': {'CB': 1, 'CPPB': 2}}, 'cname': 'OU', 'IntMarks': {'Java': 15, 'Python': 16}}
>>> for k,v in d1["ExtMarks"]["Bonus"].items():
...     print(k,"--->",v)
...
CB ---> 1
CPPB ---> 2
>>> d1.get("ExtMarks").pop("Bonus")
{'CB': 1, 'CPPB': 2}
>>> print(d1)
{'sno': 100, 'name': 'RS', 'ExtMarks': {'cm': 79, 'c++': 69, 'os': 80}, 'cname': 'OU', 'IntMarks': {'Java': 15, 'Python': 16}}


====================================================================================================
Case2:  set in dict--Possible
====================================================================================================
>>> d1={"sno":10,"sname":"RS","IntMarks":{17,19,16},"ExtMarks":{67,77,78},"cname":"CUCET"}
>>> print(d1,type(d1))---{'sno': 10, 'sname': 'RS', 'IntMarks': {16, 17, 19}, 'ExtMarks': {67, 77, 78}, 'cname': 'CUCET'} <class 'dict'>
>>> for k,v in d1.items():
...                print(k,"--->",v,"--->",type(v),type(d1))
...
                sno ---> 10 ---> <class 'int'> <class 'dict'>
                sname ---> RS ---> <class 'str'> <class 'dict'>
                IntMarks ---> {16, 17, 19} ---> <class 'set'> <class 'dict'>
                ExtMarks ---> {67, 77, 78} ---> <class 'set'> <class 'dict'>
                cname ---> CUCET ---> <class 'str'> <class 'dict'>
>>> d1["IntMarks"]-------------{16, 17, 19}
>>> d1["IntMarks"].add(15)
>>> d1["ExtMarks"].add(64)
>>> print(d1,type(d1))----{'sno': 10, 'sname': 'RS', 'IntMarks': {16, 17, 19, 15}, 'ExtMarks': {64, 67, 77, 78}, 'cname': 'CUCET'} <class 'dict'>
>>> d1.pop("IntMarks")-------{16, 17, 19, 15}
>>> print(d1,type(d1))--------{'sno': 10, 'sname': 'RS', 'ExtMarks': {64, 67, 77, 78}, 'cname': 'CUCET'} <class 'dict'>
>>> d1["ExtMarks"].clear()------->>> print(d1,type(d1))
{'sno': 10, 'sname': 'RS', 'ExtMarks': set(), 'cname': 'CUCET'} <class 'dict'>
>>> d1.pop("ExtMarks")---------set()
>>> print(d1,type(d1))---{'sno': 10, 'sname': 'RS', 'cname': 'CUCET'} <class 'dict'>
>>> d1["IntMarks"]={17,16,15}
>>> print(d1,type(d1))-------{'sno': 10, 'sname': 'RS', 'cname': 'CUCET', 'IntMarks': {16, 17, 15}} <class 'dict'>
====================================================================================================
Case3:  tuple in dict--Possible
====================================================================================================
>>> d1={"sno":10,"sname":"RS","IntMarks":(17,19,16),"ExtMarks":(67,77,78),"cname":"CUCET"}
>>> print(d1,type(d1))----{'sno': 10, 'sname': 'RS', 'IntMarks': (17, 19, 16), 'ExtMarks': (67, 77, 78), 'cname': 'CUCET'} <class 'dict'>
>>> for k,v in d1.items():
...                print(k,"--->",v,"--->",type(v),type(d1))
...
                sno ---> 10 ---> <class 'int'> <class 'dict'>
                sname ---> RS ---> <class 'str'> <class 'dict'>
                IntMarks ---> (17, 19, 16) ---> <class 'tuple'> <class 'dict'>
                ExtMarks ---> (67, 77, 78) ---> <class 'tuple'> <class 'dict'>
                cname ---> CUCET ---> <class 'str'> <class 'dict'>
>>> d1["IntMarks"]-----------(17, 19, 16)
>>> d1["IntMarks"][::2]------(17, 16)
>>> d1["ExtMarks"]----------(67, 77, 78)
>>> d1["ExtMarks"]=tuple(sorted(d1["ExtMarks"])[::-1])
>>> print(d1,type(d1))----{'sno': 10, 'sname': 'RS', 'IntMarks': (17, 19, 16), 'ExtMarks': (78, 77, 67), 'cname': 'CUCET'} <class 'dict'>
====================================================================================================
Case4:  list in dict--Possible
====================================================================================================
>>> d1={"sno":10,"sname":"RS","IntMarks":[17,19,16],"ExtMarks":[67,77,78],"cname":"CUCET"}
>>> print(d1,type(d1))---{'sno': 10, 'sname': 'RS', 'IntMarks': [17, 19, 16], 'ExtMarks': [67, 77, 78], 'cname': 'CUCET'} <class 'dict'>
>>> for k,v in d1.items():
...                print(k,"--->",v,"--->",type(v),type(d1))
...
                sno ---> 10 ---> <class 'int'> <class 'dict'>
                sname ---> RS ---> <class 'str'> <class 'dict'>
                IntMarks ---> [17, 19, 16] ---> <class 'list'> <class 'dict'>
                ExtMarks ---> [67, 77, 78] ---> <class 'list'> <class 'dict'>
                cname ---> CUCET ---> <class 'str'> <class 'dict'>
>>> d1["IntMarks"].insert(1,15)
>>> d1["ExtMarks"].insert(-1,55)
>>> print(d1,type(d1))---{'sno': 10, 'sname': 'RS', 'IntMarks': [17, 15, 19, 16], 'ExtMarks': [67, 77, 55, 78], 'cname': 'CUCET'} <class 'dict'>
>>> d1["IntMarks"].sort()
>>> d1["ExtMarks"].sort(reverse=True)
>>> print(d1,type(d1))----{'sno': 10, 'sname': 'RS', 'IntMarks': [15, 16, 17, 19], 'ExtMarks': [78, 77, 67, 55], 'cname': 'CUCET'} <class 'dict'>
>>> d1["ExtMarks"].insert(-1,[1.2,2.3])
>>> print(d1,type(d1))--{'sno': 10, 'sname': 'RS', 'IntMarks': [15, 16, 17, 19], 'ExtMarks': [78, 77, 67, [1.2, 2.3], 55], 'cname': 'CUCET'} <class 'dict'>
>>> d1["IntMarks"].insert(2,(1.2,2.3))
>>> print(d1,type(d1))---{'sno': 10, 'sname': 'RS', 'IntMarks': [15, 16, (1.2, 2.3), 17, 19], 'ExtMarks': [78, 77, 67, [1.2, 2.3], 55], 'cname': 'CUCET'} <class 'dict'>
====================================================================================================
Case5:  dict in set--------Not Possible
====================================================================================================
>>> s1={10,"RS",{"C":15,"CPP":14,"OS":17},"OUCET"}----------TypeError: unhashable type: 'dict'
====================================================================================================
Case6:  dict in tuple--Possible
====================================================================================================
>>> tpl=(10,"RS",{"C":15,"CPP":14,"OS":17},"OUCET")
>>> print(tpl,type(tpl))-----(10, 'RS', {'C': 15, 'CPP': 14, 'OS': 17}, 'OUCET') <class 'tuple'>
>>> for val in tpl:
...                print(val,"--->",type(val),type(tpl))
...
                10 ---> <class 'int'> <class 'tuple'>
                RS ---> <class 'str'> <class 'tuple'>
                {'C': 15, 'CPP': 14, 'OS': 17} ---> <class 'dict'> <class 'tuple'>
                OUCET ---> <class 'str'> <class 'tuple'>
>>> tpl[2]["DBMS"]=16
>>> print(tpl,type(tpl))-----(10, 'RS', {'C': 15, 'CPP': 14, 'OS': 17, 'DBMS': 16}, 'OUCET') <class 'tuple'>
>>> for k,v in tpl[2].items():
...                print(k,"-->",v)
...
                C --> 15
                CPP --> 14
                OS --> 17
                DBMS --> 16
>>> del tpl[2]-----------TypeError: 'tuple' object doesn't support item deletion
>>> tpl[2].pop("OS")------17
>>> print(tpl,type(tpl))----(10, 'RS', {'C': 15, 'CPP': 14, 'DBMS': 16}, 'OUCET') <class 'tuple'>
====================================================================================================
Case7:  dict in list----Possible
====================================================================================================
>>> lst=[10,"RS",{"C":15,"CPP":14,"OS":17},"OUCET"]
>>> print(lst,type(lst))-------------[10, 'RS', {'C': 15, 'CPP': 14, 'OS': 17}, 'OUCET'] <class 'list'>
>>> for val in lst:
...                print(val,"--->",type(val),type(lst))
...
                10 ---> <class 'int'> <class 'list'>
                RS ---> <class 'str'> <class 'list'>
                {'C': 15, 'CPP': 14, 'OS': 17} ---> <class 'dict'> <class 'list'>
                OUCET ---> <class 'str'> <class 'list'>
>>> lst.pop(2)---------{'C': 15, 'CPP': 14, 'OS': 17}
>>> print(lst,type(lst))------[10, 'RS', 'OUCET'] <class 'list'>
>>> lst.insert(-1,{"C":15,"CPP":14})
>>> print(lst,type(lst))----[10, 'RS', {'C': 15, 'CPP': 14}, 'OUCET'] <class 'list'>
>>> lst[2]["OS"]=15
>>> print(lst,type(lst))-----[10, 'RS', {'C': 15, 'CPP': 14, 'OS': 15}, 'OUCET'] <class 'list'>
==============================================================================================NOTE:
-------------
dict
------------
dict in dict---Possible
list in dict---Possible
tuple in dict--Possible
set in dict---possible
---------------------
List
---------------------
list in list---Possible
tuple in list---Possible
set in list-----Possible
dict in list-----Possible
--------------------------------------
tuple
--------------------------------------
tuple in tuple---Possible
list in tuple---Possible
set in tuple--Possible
dict in tuple---Possible
-------------------------------------------
Set
------------------------------------------
set in set----Not Possible---TypeError--Unhashable Type
list in set----Not Possible---TypeError--Unhashable Type
tuple in set----Possible
dict in set-----Not Possible---TypeError--Unhashable Type
===========================================================================
MiSc Information for Creating Dict Objects----
-----------------------------------------------------------------------
>>> lst=[(10,"RS"),(20,"TR"),(30,"DR")]
>>> print(lst,type(lst))-------------------------[(10, 'RS'), (20, 'TR'), (30, 'DR')] <class 'list'>
>>> d1=dict(lst)
>>> print(d1,type(d1))-----------------------{10: 'RS', 20: 'TR', 30: 'DR'} <class 'dict'>
>>> for k,v in d1.items():
...     print(k,"--->",v)
...
10 ---> RS
20 ---> TR
30 ---> DR
>>> lst=[[10,"RS"],[20,"TR"],[30,"DR"]]
>>> lst1=[10,20,30,40]
>>> lst2=["RS","TR","DR","JH"]
>>> d1=dict(lst1,lst2)
Traceback (most recent call last):
  File "<python-input-83>", line 1, in <module>
    d1=dict(lst1,lst2)
TypeError: dict expected at most 1 argument, got 2
>>>
>>> #Zipping a File--zip()
>>> k=zip(lst1,lst2)
>>> d=dict(k)
>>> print(d,type(d))
{10: 'RS', 20: 'TR', 30: 'DR', 40: 'JH'} <class 'dict'>
>>> print(type(k))
<class 'zip'>
>>> for k ,v in d.items():
...     print(k,v)
...
10 RS
20 TR
30 DR
40 JH
>>>
>>> print(d)
{10: 'RS', 20: 'TR', 30: 'DR', 40: 'JH'}
>>> x=d.items()
>>> print(x,type(x))
dict_items([(10, 'RS'), (20, 'TR'), (30, 'DR'), (40, 'JH')]) <class 'dict_items'>
>>> L=list(x)
>>> print(L,type(L))
[(10, 'RS'), (20, 'TR'), (30, 'DR'), (40, 'JH')] <class 'list'>
>>> T=tuple(x)
>>> print(T,type(T)
...
... )
((10, 'RS'), (20, 'TR'), (30, 'DR'), (40, 'JH')) <class 'tuple'>
>>> for k in T:
...     print(k)
>>>
>>> lst=["A1","A2","A3"]
>>> print(lst)
['A1', 'A2', 'A3']
>>> d=dict(lst)
>>> print(d)
{'A': '3'}
>>>
>>> tpl=("A1","B1","C1")
>>> print(tpl)
('A1', 'B1', 'C1')
>>> d=dict(tpl)
>>> print(d)
{'A': '1', 'B': '1', 'C': '1'}
>>> x=["PYTHON","JAVA","OYO"]
>>> print(x,type(x))
['PYTHON', 'JAVA', 'OYO'] <class 'list'>
>>> d=dict(x)
Traceback (most recent call last):
  File "<python-input-118>", line 1, in <module>
    d=dict(x)
ValueError: dictionary update sequence element #0 has length 6; 2 is required
>>>
>>> lst=["1","2","3"]
>>> d=dict(lst)
Traceback (most recent call last):
  File "<python-input-121>", line 1, in <module>
    d=dict(lst)
ValueError: dictionary update sequence element #0 has length 1; 2 is required
>>>