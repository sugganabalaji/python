			============================================================
					Bitwise AND Operator 	(&)
			============================================================
=>Syntax:          varname=  Value1 & Value2
=>The functionality of Bitwise AND Operator (&) is  given in the following truth Table

				-------------------------------------------------------------------------
					Value1		Value2		Value1&Value2
				-------------------------------------------------------------------------
					0			1				0
					1			0				0
					0			0				0
					1			1				1
				-------------------------------------------------------------------------
-----------------------------
Examples-1
-----------------------------
>>> 1&0-----------------------0
>>> 0&1-----------------------0
>>> 0&0-----------------------0
>>> 1&1-----------------------1
-----------------------------
Examples-2
------------------------------
>>> 2 and 3----------------------3
>>> 2&3--------------------------2
>>> 3 and 2--------------------2
>>> 3&2-----------------------2
>>> 1.2 and 2.3---------------2.3
>>> 1.2&2.3----------------------TypeError: unsupported operand type(s) for &: 'float' and 'float'
>>> 5&4--------------------------4
>>> 10&15----------------------10
>>> 6&9--------------------------0
-----------------------------------------------
Examples-3
-----------------------------------------------
>>> s1={10,20,30}
>>> s2={20,40,50}
>>> s3=s1.intersection(s2)
>>> print(s3,type(s3))---------------------------{20} <class 'set'>
		OR
>>> s1={10,20,30}
>>> s2={20,40,50}
>>> s3=s1&s2  # Bitwise & Operator
>>> print(s3,type(s3))----------------------------{20} <class 'set'>
>>> s1 and s2--------------------------------------{40, 50, 20}
-----------------------------------------------------
>>> s1={1.2,2.3,3.4}
>>> s2={1.2,4.5,5.6}
>>> s3=s1&s2
>>> print(s3,type(s3))----------------{1.2} <class 'set'>
>>> 1.2&1.2------------------------------TypeError: unsupported operand type(s) for &: 'float' and 'float'
-----------------------------------------------
>>> {"apple","Kiwi"}&{"Guava","Strawberry"}--------------set()
>>> len({"apple","Kiwi"}&{"Guava","Strawberry"})-------0
>>> [10,20,30]&[10,20,30]-------------------------------------TypeError: unsupported operand type(s) for &: 'list' and 'list'
>>> set([10,20,30])&frozenset([10,20,30])-------------{10, 20, 30}
>>> set("MISS")&set("MRS")------------------------------{'M', 'S'}
==============================================x==============================================