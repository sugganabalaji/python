			============================================================
					Bitwise OR Operator (|)
			============================================================
=>Syntax:          varname=  Value1 | Value2
=>The functionality of Bitwise OR Operator (|) is  given in the following truth Table

				-------------------------------------------------------------------------
				  Value1	 Value2		 Value1|Value2
				-------------------------------------------------------------------------
					0			1				1		
					1			0				1
					0			0				0
					1			1				1
				-------------------------------------------------------------------------
---------------------------------
Examples-1
---------------------------------
>>> 1|0
1
>>> 0|1
1
>>> 0|0
0
>>> 1|1
1
>>>
---------------------------------
Examples-2
----------------------------------
>>> 4|6
6
>>> 3|4
7
>>> 10|9
11
>>> 15|15
15
>>> 1.2 or 2.3
1.2
>>> 1.2 |2.3----------------------------TypeError: unsupported operand type(s) for |: 'float' and 'float'
-------------------------------------
Examples-3
------------------------------------
>>> s1={10,20,30}
>>> s2={15,20,25}
>>> s3=s1.union(s2)
>>> print(s3,type(s3))------------------{20, 25, 10, 30, 15} <class 'set'>
		OR
>>> s1={10,20,30}
>>> s2={15,20,25}
>>> s3=s1|s2 # Bitwise OR Operator (|)
>>> print(s3,type(s3))-------------------------{20, 25, 10, 30, 15} <class 'set'>
>>> {1.2,3.4,4.5}|{1.2,5.6,6.7}---------------{1.2, 3.4, 4.5, 5.6, 6.7}
>>> 1.2|2.3----------------------------------------TypeError: unsupported operand type(s) for |: 'float' and 'float'
>>> {"apple"}|{"mango","apple"}-----------{'mango', 'apple'}
>>> "apple" | "mango"------------------------TypeError: unsupported operand type(s) for |: 'str' and 'str'
=====================================x===========================================





















